#######################################################################
#######################      emonhub.conf     #########################
#######################################################################
###
### SPECIMEN emonHub configuration file
### Note that when installed from apt, a new config file is written
### by the debian/postinst script, so changing this file will do
### nothing in and of itself.
###
### Each Interfacer and each Reporter has
### - a [[name]]: a unique string
### - a type: the name of the class it instantiates
### - a set of init_settings (depends on the type)
### - a set of runtimesettings (depends on the type)
### Both init_settings and runtimesettings sections must be defined,
### even if empty. Init settings are used at initialization,
### and runtime settings are refreshed on a regular basis.
### Many settings below are "commented out" as they are not mandatory and
### have been included as a template or to provide alternative options
### removing the leading # will enable the setting and override the default
### Default settings are shown as comments on the same line as the setting
### eg #(default:xyz) "xyz" is set if the setting is "commented out".
###
### All lines beginning with '###' are comments and can be safely removed.
###
#######################################################################
#######################    emonHub  settings    #######################
#######################################################################

[hub]

### loglevel must be one of DEBUG, INFO, WARNING, ERROR, and CRITICAL
### see here : http://docs.python.org/2/library/logging.html
#loglevel = INFO #(default:WARNING)

### Total number of channels (max 8). by default ch1 is all "reporters".
### ch2 is used for the first control channel, .
#channels = 2 #(default:1)

#######################################################################
#######################        Reporters        #######################
#######################################################################

[reporters]

### This reporter sends data to emonCMS
[[emonCMS]]
    Type = EmonHubEmoncmsReporter
    [[[init_settings]]]
        # buffer_size = 10000 #(default:10000)
    [[[runtimesettings]]]
        # interval = 10 #(default:0)
        # batchsize = 1 #(default:100,max:250)
        # url = http://localhost/emoncms #(default:http://emoncms.org)
        apikey = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

#######################################################################
#######################       Interfacers       #######################
#######################################################################

[interfacers]

### This interfacer manages the RFM2Pi module
[[RFM2Pi]]
    Type = EmonHubJeeInterfacer
    [[[init_settings]]]
        # com_port = /dev/ttyUSB0 #(default:/dev/ttyAMA0)
        # com_baud = 9600 #(autoselect:9600:57600)
    [[[runtimesettings]]]
        ### WIP: *xchannels are currently using a binary array
        ### 1 = ch1, 10 = ch2, 100 = ch 3 & 11 is BOTH ch1&2. (TBC!!)
        # rxchannels = 1 #(default:1)
        # txchannels = 10 #(default:0)
        # datacode = B #(default:h)
        # scale = 100 #(default:1)
        # group = 210 #(default:210)
        # frequency = 898 #(default:433)
        # baseid = 15 #(default:15)
        # quiet = false #(default:true)
        # interval = 300 #(default:0)
        # nodeoffset = 32 #(default:0)

### This interfacer accepts payloads via websockets
[[Socket]]
    Type = EmonHubSocketInterfacer
    [[[init_settings]]]
        # port_nb = 50011 #(default:50011)
    [[[runtimesettings]]]
        ### WIP: *xchannels are currently using a binary array
        ### 1 = ch1, 10 = ch2, 100 = ch 3 & 11 is BOTH ch1&2. (TBC!!)
        # rxchannels = 10 #(default:1)
        # txchannels = 0 #(default:0)not implemented
        # datacode = 0 #(default:0)
        # scale = 100 #(default:1)
        # timestamped = true #(default:false)
        # targeted = true #(default:false)
        # apikey = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

### This interfacer provides direct serial/usb
[[DirectSerial]]
    #Type = EmonHubSerialInterfacer
    [[[init_settings]]]
        # com_port = /dev/ttyAMA0 #(default:/dev/ttyUSB0)
        # com_baud = 38400 #(default:9600)
    [[[runtimesettings]]]
        ### WIP: *xchannels are currently using a binary array
        ### 1 = ch1, 10 = ch2, 100 = ch 3 & 11 is BOTH ch1&2. (TBC!!)
        # rxchannels = 1 #(default:1)
        # txchannels = 10 #(default:0)not implemented yet
        # datacode = B #(default:0)
        # scale = 100 #(default:1)
        # nodeoffset = 10 #(default:0)
        # interval = 10 #(default:0)

### This interfacer reads packets from emonCMS PacketGen module
[[PacketGen]]
    #Type = EmonHubPacketGenInterfacer
    [[[init_settings]]]
    [[[runtimesettings]]]
        ### WIP: *xchannels are currently using a binary array
        ### 1 = ch1, 10 = ch2, 100 = ch 3 & 11 is BOTH ch1&2. (TBC!!)
        # rxchannels = 10 #(default:10)
        # interval = 5 #(default:5)
        # targeted = true #(default:false)
        # url = http://localhost/emoncms #(default:http://localhost/emoncms)
        apikey = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

### This interfacer manages the RFM2Pi module
[[MQTT]]
    #Type = EmonHubMqttInterfacer
    [[[init_settings]]]
        #mqtt_host = 127.0.0.1
        #mqtt_port = 8883 #(default:1883)
    [[[runtimesettings]]]
        ### WIP: *xchannels are currently using a binary array
        ### 1 = ch1, 10 = ch2, 100 = ch 3 & 11 is BOTH ch1&2. (TBC!!)
        # rxchannels = 1 #(default:1)
        # txchannels = 100 #(default:0)
        # datacode = h #(default:0)
        # scale = 100 #(default:1)
        # basetopic = home/ #(default:emonhub/+/)
        # rxtopics = node/+/rx #(default:rx/)
        # txtopics = emoncms/input #(default:tx/)


### This interfacer uses the Pi's IÂ²C serial bus to poll devices
[[I2C]]
    #Type = EmonHubTwiInterfacer
    [[[init_settings]]]
        # bus_id = 0 #(default:1)
    [[[runtimesettings]]]
        ### WIP: *xchannels are currently using a binary array
        ### 1 = ch1, 10 = ch2, 100 = ch 3 & 11 is BOTH ch1&2. (TBC!!)
        # rxchannels = 1 #(default:1)
        # txchannels = 10 #(default:0)not implemented yet
        # interval = 10 #(default:5)
        # datacode = B #(default:h)
        # scale = 100 #(default:1)
        bytesize = 10 #(default:32)
        nodeoffset = 20 #(default:10)
        deviceids = 1, 2, 3


#######################################################################
#######################          Nodes          #######################
#######################################################################

[nodes]

### List of nodes by node ID
### 'datacode' is default for node and 'datacodes' are per value data codes.
### if both are present 'datacode' is ignored in favour of 'datacodes'
### eg node 99 would expect 1 long and 4 ints, unless the "datacodes" line
### was removed, then "datacode" would make it expect any number of longs,
### likewise per value "scales" will override default node "scale", the number
### of "scales" must match the number of values or frame will be discarded.
#[[99]]
#	datacode = l
### or
#	datacodes = l, h, h, h, h,
#   scale = 1
### or
#   scales = 1, 100, 1, 10, 1
